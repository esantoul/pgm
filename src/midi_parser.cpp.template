/**
 * @file midi_parser.cpp
 * @author Etienne SANTOUL github.com/esantoul
 * @brief Midi Parser implementation file
 * @version 0.1
 * @date 2021-02-04
 *
 * @copyright BSD 2-Clause License. Copyright (c) 2021, Etienne SANTOUL. All rights reserved.
 */

#include "midi_parser.hpp"

constexpr ParseInfo MidiBytes::M1::NoteOff::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::NoteOn::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::PolyPressure::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::ControlChange::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::ProgramChange::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::ChannelPressure::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::PitchBend::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }

constexpr ParseInfo MidiBytes::M1::SystemMessage::SysEx::UniNonRT::SampleDumpHeader::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::SysEx::UniNonRT::SampleDataPacket::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::SysEx::UniNonRT::SampleDumpRequest::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::SysEx::UniNonRT::MidiTimeCode::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::SysEx::UniNonRT::SampleDumpExtensions::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::SysEx::UniNonRT::GeneralInformation::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::SysEx::UniNonRT::FileDump::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::SysEx::UniNonRT::MidiTuningStandard::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::SysEx::UniNonRT::GeneralMidi::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::SysEx::UniNonRT::EndOfFile::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::SysEx::UniNonRT::Wait::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::SysEx::UniNonRT::Cancel::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::SysEx::UniNonRT::NAK::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::SysEx::UniNonRT::ACK::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }

constexpr ParseInfo MidiBytes::M1::SystemMessage::SysEx::UniRT::MidiTimeCode::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::SysEx::UniRT::ShowControls::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::SysEx::UniRT::NotationInfo::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::SysEx::UniRT::DeviceControl::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::SysEx::UniRT::RTMTCCue::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::SysEx::UniRT::MMCCommands::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::SysEx::UniRT::MMCResponse::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::SysEx::UniRT::MidiTuning::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }

constexpr ParseInfo MidiBytes::M1::SystemMessage::MTC::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::Songpos::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::SongSel::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::TuneRequest::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::TimingClock::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::Start::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::Continue::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::Stop::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::ActiveSensing::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::SystemReset::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }




constexpr bool MidiBytes::M2::isMidi2Enabled() { return false; }

constexpr ParseInfo MidiBytes::M2::Utility::NOOP::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Utility::JRClock::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Utility::JRTimestamp::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }

constexpr ParseInfo MidiBytes::M2::System::MTC::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::System::SongPos::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::System::SongSel::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::System::TuneRequest::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::System::TimingClock::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::System::Start::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::System::Continue::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::System::Stop::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::System::ActiveSensing::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::System::Reset::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }

constexpr ParseInfo MidiBytes::M2::Midi1Channel::NoteOff::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Midi1Channel::NoteOn::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Midi1Channel::PolyPressure::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Midi1Channel::ControlChange::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Midi1Channel::ProgramChange::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Midi1Channel::ChannelPressure::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Midi1Channel::PitchBend::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }

constexpr ParseInfo MidiBytes::M2::Data64Bits::SysEx1Packet::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Data64Bits::SysExStart::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Data64Bits::SysExContinue::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Data64Bits::SysExEnd::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }

constexpr ParseInfo MidiBytes::M2::Midi2Channel::RegistPerNoteCtrl::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Midi2Channel::AssignPerNoteCtrl::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Midi2Channel::RegistCtrl::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Midi2Channel::AssignCtrl::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Midi2Channel::RelativeRegistCtrl::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Midi2Channel::RelativeAssignCtrl::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Midi2Channel::PerNotePitchBend::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Midi2Channel::NoteOff::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Midi2Channel::NoteOn::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Midi2Channel::PolyPressure::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Midi2Channel::ControlChange::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Midi2Channel::ProgramChange::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Midi2Channel::ChannelPressure::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Midi2Channel::PitchBend::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Midi2Channel::PerNoteManagement::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }

constexpr ParseInfo MidiBytes::M2::Data128Bits::SysEx8In1Packet::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Data128Bits::SysEx8Start::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Data128Bits::SysEx8Continue::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Data128Bits::SysEx8End::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Data128Bits::MixedDataSetHeader::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M2::Data128Bits::MixedDataSetPayload::method(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }


constexpr ParseInfo MidiBytes::M1::SystemMessage::SysEx::specificMatchFunction(const std::uint8_t *&, std::size_t &) { return {ParseInfo::E::UNIMPLEMENTED}; }
constexpr ParseInfo MidiBytes::M1::SystemMessage::SysEx::interpretSpecificSysEx(const std::uint8_t *, std::size_t) { return {ParseInfo::E::UNIMPLEMENTED}; }
